{
  "swagger": "2.0",
  "info": {
    "version": "V1",
    "title": "Yapstone Customer APIs",
    "description": "APIs for onboarding and managing customers. test",
    "contact": {},
    "x-codegen-settings": {
      "Nullify404": false,
      "GenerateAsyncCode": true,
      "UseMethodPrefix": false,
      "UseModelPostfix": false,
      "UseControllerPrefix": true,
      "UseEnumPostfix": true,
      "CollectParameters": false,
      "UseConstructorsForConfig": false,
      "UseCommonSDKLibrary": false,
      "iOSUseAppInfoPlist": false,
      "AndroidUseAppManifest": false,
      "BodySerialization": 0,
      "EnableAdditionalModelProperties": false,
      "PreserveParameterOrder": true,
      "AppendContentHeaders": true,
      "iOSGenerateCoreData": false,
      "GenerateInterfaces": false,
      "NodeHttpClient": "NODE_REQUEST",
      "ValidateRequiredParameters": false,
      "JavaUsePropertiesConfig": false,
      "Timeout": 0.0,
      "StoreTimezoneInformation": false,
      "EnablePHPComposerVersionString": false,
      "EnableLogging": false,
      "ArraySerialization": "Indexed",
      "ModelSerializationScheme": "Json",
      "UseExceptionPrefix": true,
      "RunscopeEnabled": false,
      "AndroidHttpClient": "ANDROID_OK",
      "ObjCHttpClient": "UNIREST",
      "CSharpHttpClient": "UNIREST",
      "PHPHttpClient": "UNIREST",
      "JavaHttpClient": "JAVA_OK",
      "ParameterArrayFormat": "ParamArrayWithIndex",
      "SecurityProtocols": [
        "Ssl3",
        "Tls"
      ],
      "GenerateTravisConfig": false,
      "GenerateCircleConfig": false,
      "GenerateAppveyorConfig": false,
      "GenerateJenkinsConfig": false,
      "EnableHttpCache": false,
      "Retries": 0,
      "RetryInterval": 1.0,
      "GenerateAdvancedDocs": true,
      "UnderscoreNumbers": true,
      "UseSingletonPattern": true,
      "DisableLinting": false,
      "ApplyCustomizations": [],
      "SortResources": false,
      "AllowSkippingSSLCertVerification": false,
      "DoNotSplitWords": [],
      "EnableGlobalUserAgent": true,
      "ReturnCompleteHttpResponse": false,
      "GenerateModels": true,
      "GenerateExceptions": true,
      "IgnoreIfNullJson": false,
      "DisableDocs": false,
      "LiftParameterDescriptionFromCustomType": false,
      "ThrowForHttpErrorStatusCodes": true,
      "ResponseMapping": {
        "Type": "Simple"
      },
      "ForceKeywordArgsInRuby": false,
      "SymbolizeHashKeysInRuby": false,
      "UsageExampleEndpoint": {
        "Description": "",
        "EndpointGroupName": "",
        "EndpointName": ""
      },
      "IsLatestVersion": false,
      "EnableImmutableModels": false,
      "GenerateEnums": true,
      "BackoffFactor": 2.0,
      "StatusCodesToRetry": [
        408,
        413,
        429,
        500,
        502,
        503,
        504,
        521,
        522,
        524
      ],
      "RequestMethodsToRetry": [
        "GET",
        "PUT"
      ],
      "UserConfigurableRetries": true,
      "UseEndpointMethodName": false,
      "EncodeTemplateParameters": true,
      "GenerateExamplesForOptionalFields": false,
      "MultitargetDotnetVersions": false,
      "BackoffMax": 0.0,
      "RetryOnTimeout": true,
      "EnableCookies": false,
      "EnableJsonPassThroughForAny": false
    },
    "x-server-configuration": {
      "default-environment": "production",
      "default-server": "default",
      "environments": [
        {
          "name": "production",
          "servers": [
            {
              "name": "default",
              "url": "https://{defaultHost}"
            }
          ]
        }
      ],
      "parameters": [
        {
          "name": "defaultHost",
          "required": true,
          "default": "www.example.com/customer-api/api/v1",
          "type": "string"
        }
      ]
    },
    "x-image-uri": ""
  },
  "host": "www.example.com",
  "basePath": "/customer-api/api/v1",
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "description": "",
      "name": "Authorization",
      "in": "header",
      "x-testValue": ""
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/customers/": {
      "post": {
        "description": "Create a new customer. (EDITED)",
        "summary": "createCustomer",
        "tags": [
          "Customers"
        ],
        "operationId": "createCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-yapstone-ipaddress",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "IP address"
          },
          {
            "name": "x-yapstone-fpsid",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Device Finger print id."
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerResource"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CustomerResource"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {}
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/customers/{customerId}": {
      "get": {
        "description": "Fetch a customer.",
        "summary": "getCustomer",
        "tags": [
          "Customers"
        ],
        "operationId": "getCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerResource"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {}
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "Modify a customer.",
        "summary": "updateCustomer",
        "tags": [
          "Customers"
        ],
        "operationId": "updateCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json-patch+json"
        ],
        "parameters": [
          {
            "name": "x-yapstone-ipaddress",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "IP address"
          },
          {
            "name": "x-yapstone-fpsid",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Device Finger print id."
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerResource"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {}
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete a customer.",
        "summary": "deleteCustomer",
        "tags": [
          "Customers"
        ],
        "operationId": "deleteCustomer",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeactivateResponse"
            },
            "examples": {
              "application/json": {
                "message": "string",
                "cascadedContracts": [
                  "abc"
                ],
                "failedContracts": [
                  "xyz"
                ]
              }
            },
            "headers": {}
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {}
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {}
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {}
          },
          "500": {
            "description": "internal service error",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {}
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/customers/abcd"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "statusCode": "200",
              "headers": {},
              "body": "{\n  \"message\": \"string\",\n  \"cascadedContracts\": [\"abc\"],\n  \"failedContracts\": [\"xyz\"]\n}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "200response"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/admin/customers/{customerId}": {
      "get": {
        "description": "Fetch a customer.",
        "summary": "getCustomerForInternalUse",
        "tags": [
          "Customers-Admin"
        ],
        "operationId": "getCustomerForInternalUse",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerAdminResource"
            },
            "headers": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/customers/{customerId}/marketplace": {
      "get": {
        "description": "Fetch a customer with maketPlace.",
        "summary": "getCustomerMarketplace",
        "tags": [
          "Search"
        ],
        "operationId": "getCustomerMarketplace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerMarketplaceResource"
            },
            "headers": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "definitions": {
    "NameResource": {
      "title": "NameResource",
      "description": "The name of the person. It will consist of first, middle, last, additionalLast, honorificPrefix, and honorificSuffix.",
      "type": "object",
      "properties": {
        "honorificPrefix": {
          "$ref": "#/definitions/HonorificPrefix"
        },
        "first": {
          "description": "The persons first name.",
          "type": "string"
        },
        "middle": {
          "type": "string"
        },
        "last": {
          "description": "The persons last name.",
          "type": "string"
        },
        "additionalLast": {
          "description": "The 2nd last name of the person.",
          "type": "string"
        },
        "honorificSuffix": {
          "description": "The persons title.",
          "type": "string"
        }
      }
    },
    "GovernmentIdentificationResource": {
      "title": "GovernmentIdentificationResource",
      "description": "The goverment identification information.",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/governmentIdType"
        },
        "displayText": {
          "description": "The display info for the identification.",
          "type": "string"
        },
        "govIdDataToken": {
          "description": "The key to vault that contains the data associated with the government id. This key will be generated when the identification is created at YapStone.",
          "type": "string"
        },
        "number": {
          "description": "The number associated with the identification.",
          "type": "string"
        },
        "expiration": {
          "type": "string",
          "format": "date"
        },
        "country": {
          "description": "The 3-letter ISO country code of the identification issuer.",
          "type": "string"
        },
        "state": {
          "description": "The state or province of the identification issuer.",
          "type": "string"
        }
      }
    },
    "governmentIdType": {
      "title": "governmentIdType",
      "description": "The type of identification.",
      "x-enum-elements": [
        {
          "name": "LAST_FOUR_SSN",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "LAST_FOUR_SSN"
      ]
    },
    "PhoneResource": {
      "title": "PhoneResource",
      "description": "The phone number.",
      "type": "object",
      "properties": {
        "number": {
          "description": "The phone number.",
          "type": "string"
        },
        "extension": {
          "description": "The phone extension.",
          "type": "string"
        }
      }
    },
    "AddressResource": {
      "title": "AddressResource",
      "description": "The address of the customer.",
      "type": "object",
      "properties": {
        "street1": {
          "description": "The street address line 1.",
          "type": "string"
        },
        "street2": {
          "description": "The street address line 2.",
          "type": "string"
        },
        "street3": {
          "description": "The street address line 3.",
          "type": "string"
        },
        "street4": {
          "description": "The street address line 4.",
          "type": "string"
        },
        "city": {
          "description": "The name of the city.",
          "type": "string"
        },
        "state": {
          "description": "The state or province where the address resides.",
          "type": "string"
        },
        "postalCode": {
          "description": "The postal code of the address.",
          "type": "string"
        },
        "countryCode": {
          "description": "The 3-letter countryCode of the address.",
          "type": "string"
        }
      }
    },
    "Request": {
      "title": "Request",
      "discriminator": "request",
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object"
        },
        "request": {
          "type": "string"
        }
      },
      "required": [
        "request"
      ]
    },
    "CustomerAdminResource": {
      "title": "CustomerAdminResource",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource identifier for the customer.",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/NameResource"
        },
        "phone": {
          "$ref": "#/definitions/PhoneResource"
        },
        "email": {
          "description": "The email address.",
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/AddressResource"
        },
        "govIdentification": {
          "$ref": "#/definitions/GovernmentIdentificationResource"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date"
        },
        "metadata": {
          "type": "object"
        },
        "consents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsentResource"
          }
        },
        "externalId": {
          "description": "The Mktplaces unique identifier for the Customer.",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/entityProductStatusResource"
        },
        "businessName": {
          "description": "The name of the business.",
          "type": "string"
        },
        "businessType": {
          "$ref": "#/definitions/BusinessType"
        },
        "partyId": {
          "description": "The party id for the customer.",
          "type": "string"
        }
      }
    },
    "CustomerResource": {
      "title": "CustomerResource",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource identifier for the customer.",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/NameResource"
        },
        "phone": {
          "$ref": "#/definitions/PhoneResource"
        },
        "email": {
          "description": "The email address.",
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/AddressResource"
        },
        "govIdentification": {
          "$ref": "#/definitions/GovernmentIdentificationResource"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date"
        },
        "metadata": {
          "type": "object"
        },
        "consents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsentResource"
          }
        },
        "externalId": {
          "description": "The Mktplaces unique identifier for the Customer.",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/entityProductStatusResource"
        },
        "businessName": {
          "description": "The name of the business.",
          "type": "string"
        },
        "businessType": {
          "$ref": "#/definitions/BusinessType"
        }
      }
    },
    "CustomerMarketplaceResource": {
      "title": "CustomerMarketplaceResource",
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/customer"
        },
        "marketplace": {
          "$ref": "#/definitions/marketplaceResource"
        }
      }
    },
    "marketplaceResource": {
      "title": "marketplaceResource",
      "type": "object",
      "properties": {
        "id": {
          "description": "The marketplace Id.",
          "type": "string"
        },
        "name": {
          "description": "The marketplace name.",
          "type": "string"
        },
        "phone": {
          "$ref": "#/definitions/PhoneResource"
        },
        "email": {
          "description": "The Marketplace email address.",
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/AddressResource"
        }
      }
    },
    "customer": {
      "title": "customer",
      "type": "object",
      "properties": {
        "id": {
          "description": "The customer Id.",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/NameResource"
        }
      }
    },
    "ConsentResource": {
      "title": "ConsentResource",
      "type": "object",
      "properties": {
        "timeOfConsent": {
          "description": "The timestamp in ISO 8601 format when the user consented.",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "$ref": "#/definitions/ConsentType"
        },
        "version": {
          "description": "The version of the consent if there is one.",
          "type": "integer",
          "format": "int32"
        },
        "accepted": {
          "description": "Indicates the acceptance of the T&Cs.",
          "type": "boolean"
        }
      }
    },
    "ConsentType": {
      "title": "ConsentType",
      "x-enum-elements": [
        {
          "name": "AGE",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "AGE"
      ]
    },
    "entityProductStatusResource": {
      "title": "entityProductStatusResource",
      "description": "The status of the entity.",
      "type": "object",
      "properties": {
        "payout": {
          "$ref": "#/definitions/statusResource"
        }
      }
    },
    "statusResource": {
      "title": "statusResource",
      "description": "The status of the Customer.",
      "type": "object",
      "properties": {
        "verificationStatus": {
          "$ref": "#/definitions/VerificationStatus"
        },
        "requiredActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/actionResource"
          }
        },
        "reasons": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "actionResource": {
      "title": "actionResource",
      "description": "The action that must be taken on the entity.",
      "type": "object",
      "properties": {
        "actionCode": {
          "description": "The name of the type of action that must be taken.",
          "type": "string"
        },
        "description": {
          "description": "A detailed description of the action that must be performed.",
          "type": "string"
        },
        "entityId": {
          "description": "id for the enitity that requires the action.",
          "type": "string"
        },
        "entityType": {
          "description": "the type of entity for the required action.",
          "type": "string"
        }
      }
    },
    "Page": {
      "title": "Page",
      "discriminator": "page",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "page": {
          "type": "string"
        }
      },
      "required": [
        "page"
      ]
    },
    "CustomerPage": {
      "title": "CustomerPage",
      "allOf": [
        {
          "$ref": "#/definitions/Page"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerResource"
              }
            }
          }
        }
      ]
    },
    "Errors": {
      "title": "Errors",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors1"
          }
        }
      }
    },
    "DeactivateResponse": {
      "title": "DeactivateResponse",
      "description": "The deactivate response contains if the deactivation was successful and entity IDs for associated entities (in case of cascade delete).",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "cascadedContracts": {
          "description": "List of contracts successfully de-activated due to cascade, otherwise empty",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failedContracts": {
          "description": "List of contracts failed to de-activate while cascade, otherwise empty",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BusinessType": {
      "title": "BusinessType",
      "description": "The type of business unit (sole_prop, corp, llc)",
      "x-enum-elements": [
        {
          "name": "SOLE_PROPRIETOR",
          "description": ""
        },
        {
          "name": "PARTNERSHIP",
          "description": ""
        },
        {
          "name": "LLC",
          "description": ""
        },
        {
          "name": "S_CORP",
          "description": ""
        },
        {
          "name": "CORPORATION",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "SOLE_PROPRIETOR",
        "PARTNERSHIP",
        "LLC",
        "S_CORP",
        "CORPORATION"
      ]
    },
    "Errors1": {
      "title": "Errors1",
      "type": "object",
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "HonorificPrefix": {
      "title": "HonorificPrefix",
      "description": "The persons title.",
      "x-enum-elements": [
        {
          "name": "MR",
          "description": ""
        },
        {
          "name": "MRS",
          "description": ""
        },
        {
          "name": "MS",
          "description": ""
        },
        {
          "name": "MISS",
          "description": ""
        },
        {
          "name": "DR",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "MR",
        "MRS",
        "MS",
        "MISS",
        "DR"
      ]
    },
    "Meta": {
      "title": "Meta",
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "VerificationStatus": {
      "title": "VerificationStatus",
      "description": "The verification status of the Customer.",
      "x-enum-elements": [
        {
          "name": "VERIFICATION_NOT_STARTED",
          "description": ""
        },
        {
          "name": "DECLINED",
          "description": ""
        },
        {
          "name": "UNVERIFIED",
          "description": ""
        },
        {
          "name": "VERIFIED",
          "description": ""
        },
        {
          "name": "VERIFICATION_IN_PROGRESS",
          "description": ""
        },
        {
          "name": "DEACTIVATED",
          "description": ""
        },
        {
          "name": "VALIDATED",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "VERIFICATION_NOT_STARTED",
        "DECLINED",
        "UNVERIFIED",
        "VERIFIED",
        "VERIFICATION_IN_PROGRESS",
        "DEACTIVATED",
        "VALIDATED"
      ]
    }
  },
  "security": [
    {
      "Authorization": []
    }
  ],
  "tags": [
    {
      "name": "Customers",
      "description": ""
    },
    {
      "name": "Customers-Admin",
      "description": ""
    },
    {
      "name": "Search",
      "description": ""
    }
  ]
}
